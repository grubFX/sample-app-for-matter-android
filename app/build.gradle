plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id "com.google.protobuf" version "0.8.17"
    id "org.jetbrains.kotlin.kapt"
    id 'dagger.hilt.android.plugin'
    id "androidx.navigation.safeargs"
}

android {
    // namespace 'com.google.homesampleapp.homesampleapp'
    compileSdk 33

    defaultConfig {
        // DeviceSharingClone: Change this value for the target commissioner cloned app
        applicationId "com.google.homesampleapp"
        minSdk 27
        targetSdk 33
        versionCode 10
        versionName "1.0.3"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding true
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['third_party/connectedhomeip/libs/jniLibs']
        }
    }
    android.buildFeatures.viewBinding = true

    // Specifies one flavor dimension.
    flavorDimensions += "version"
    productFlavors {
        create("default") {
            dimension = "version"
            applicationIdSuffix = ".default"
            versionNameSuffix = "-default"
        }
        create("targetcommissioner") {
            dimension = "version"
            applicationIdSuffix = ".targetcommissioner"
            versionNameSuffix = "-targetcommissioner"
        }
    }
    namespace 'com.google.homesampleapp'
    buildToolsVersion '33.0.0'
    ndkVersion '25.1.8937393'
}

dependencies {
    // Native libs
    implementation fileTree(dir: "third_party/connectedhomeip/libs", include: ["*.jar", "*.so"])

    // Connected Home
    implementation 'com.google.android.gms:play-services-base:18.1.0'
    implementation 'com.google.android.gms:play-services-home:16.0.0-beta1'

    // AndroidX
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.databinding:databinding-runtime:7.3.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.preference:preference:1.2.0'

    // Navigation
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.3'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.3'

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleExtensionsVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"

    // Datastore
    implementation "androidx.datastore:datastore:$dataStoreVersion"
    implementation 'androidx.datastore:datastore-core:1.0.0'
    implementation 'com.google.protobuf:protobuf-javalite:3.18.0'

    // Hilt
    kapt "com.google.dagger:hilt-compiler:$hiltVersion"
    implementation "com.google.dagger:hilt-android:$hiltVersion"

    // Other
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'com.jakewharton.timber:timber:5.0.1'

    // Test
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
    androidTestImplementation "androidx.test:runner:$runnerVersion"
    androidTestImplementation "androidx.test:rules:$rulesVersion"
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
}

protobuf {
    protoc {
        // For Apple M1 Chip
        def isMac = System.properties['os.name'].toLowerCase().contains('mac')
        def protocDepSuffix = isMac ? ":osx-x86_64" : ""
        artifact = "com.google.protobuf:protoc:3.14.0" + protocDepSuffix
    }

    // Generates the java Protobuf-lite code for the Protobufs in this project. See
    // https://github.com/google/protobuf-gradle-plugin#customizing-protobuf-compilation
    // for more information.
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}